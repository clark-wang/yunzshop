<?php
namespace app\frontend\modules\order\model;

use app\frontend\modules\goods\model\PreGeneratedOrderGoodsModel;
use app\frontend\modules\member\model\MemberModel;
use app\frontend\modules\order\model\behavior\GenerateOrderByGoods;

class PreGeneratedOrderModel extends OrderModel
{
    protected $total;
    protected $price;
    protected $goods_price;
    protected $_pre_order_goods_models;
    protected $member_model;
    protected $shop_model;
    private $_has_calculated;

    public function __construct(array $pre_order_goods_models = null)
    {
        //var_dump($pre_order_goods_models);exit;
        if (isset($pre_order_goods_models)) {
            $this->_pre_order_goods_models = $pre_order_goods_models;
        }
        $this->_has_calculated = false;
    }

    public function addPreGeneratedOrderGoods(array $pre_order_goods_models)
    {

        $this->_pre_order_goods_models = array_merge($this->_pre_order_goods_models, $pre_order_goods_models);
        $this->_has_calculated = false;

    }

    public function setMemberModel(MemberModel $member_model)
    {
        $this->member_model = $member_model;
    }

    public function setShopModel(MemberModel $member_model)
    {
        $this->member_model = $member_model;
    }

    private function calculate()
    {
        $this->_has_calculated = true;
        $this->total = $this->calculateTotal();
        $this->price = $this->calculatePrice();
        $this->goods_price = $this->calculateGoodsPrice();
    }

    private function calculateTotal()
    {
        $result = 0;
        foreach ($this->_pre_order_goods_models as $pre_order_goods_model) {
            $result += $pre_order_goods_model->total;
        }
        return $result;
    }

    private function calculatePrice()
    {
        $result = 0;
        foreach ($this->_pre_order_goods_models as $pre_order_goods_model) {
var_dump($pre_order_goods_model->price);
            $result += $pre_order_goods_model->price;
        }
        return $result;
    }

    private function calculateGoodsPrice()
    {
        $result = 0;
        foreach ($this->_pre_order_goods_models as $pre_order_goods_model) {
            $result += $pre_order_goods_model->goods_price;
        }
        return $result;
    }


    public function __get($name)
    {
        if ($this->_has_calculated == false) {
            $this->calculate();
        }
        return parent::__get($name); // TODO: Change the autogenerated stub
    }

    public function generate()
    {
        if ($this->_has_calculated == false) {
            $this->calculate();
        }
        $this->getPreGeneratedOrderGoodsGroup()->generate();
        $order_makers = (new GenerateOrderByGoods($this));
        return $order_makers->create();
    }

}